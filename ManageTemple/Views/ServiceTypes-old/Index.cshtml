@model IEnumerable<ManageTemple.Models.ServiceType>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

@if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count() > 0)
{
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title">Errors:</h3>
        </div>
        <div class="panel-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    </div>
}


<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EffectiveDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ExpirationDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.isDefault)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.isActive)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EffectiveDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ExpirationDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.isDefault)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.isActive)
        </td>
        <td>
            @*@if (!item.isDefault)
            {
                @Html.ActionLink("Make Default", "MakeDefault", new { id = item.id }, new { @class = "btn btn-default" }) <br />
            }*@

            @if (item.isActive)
            {
                using (Html.BeginForm("Update", "ServiceTypes", new { id = item.id, task = "DeActivate" }, FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-actions no-color">
                        <input type="submit" value="DeActivate" class="btn btn-default" />
                    </div>
                }
            }

            @if (!item.isActive)
            {
                using (Html.BeginForm("Update", "ServiceTypes", new { id = item.id, task = "Activate" }, FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-actions no-color">
                        <input type="submit" value="Activate" class="btn btn-default" />
                    </div>
                }
            }
            @if (!item.isDefault)
            {
                using (Html.BeginForm("Update", "ServiceTypes", new { id = item.id, task = "MakeDefault" }, FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-actions no-color">
                        <input type="submit" value="Make Default" class="btn btn-default" />
                    </div>
                }
            }

            @Html.ActionLink("Edit", "Edit", new { id = item.id }, new { @class = "btn btn-default" }) <br />
            @*@Html.ActionLink("View", "Details", new { id = item.id }, new { @class = "btn btn-default" }) <br />*@
        </td>
    </tr>
}

</table>
